# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    subscription: Subscription
}

interface TransactionEvent {
    ethAmount: BigDecimal!
    id: ID!
    tokenAmount: BigDecimal!
    transaction: Transaction!
}

type AddLiquidityEvent implements TransactionEvent {
    ethAmount: BigDecimal!
    id: ID!
    tokenAmount: BigDecimal!
    transaction: Transaction!
    uniTokensMinted: BigDecimal!
}

type EthPurchaseEvent implements TransactionEvent {
    ethAmount: BigDecimal!
    ethFee: BigDecimal!
    id: ID!
    tokenAmount: BigDecimal!
    tokenFee: BigDecimal!
    transaction: Transaction!
}

type Exchange {
    addLiquidityCount: BigInt!
    buyTokenCount: BigInt!
    combinedBalanceInEth: BigDecimal!
    combinedBalanceInUSD: BigDecimal!
    ethBalance: BigDecimal!
    ethLiquidity: BigDecimal!
    factory: Uniswap
    fee: BigDecimal!
    id: ID!
    lastPrice: BigDecimal!
    lastPriceUSD: BigDecimal!
    price: BigDecimal!
    priceUSD: BigDecimal!
    removeLiquidityCount: BigInt!
    sellTokenCount: BigInt!
    startTime: Int!
    tokenAddress: Bytes!
    tokenBalance: BigDecimal!
    tokenDecimals: Int
    tokenHolders(first: Int = 100, orderBy: UserExchangeData_orderBy, orderDirection: OrderDirection, skip: Int = 0, where: UserExchangeData_filter): [UserExchangeData!]
    tokenLiquidity: BigDecimal!
    tokenName: String
    tokenSymbol: String
    totalTxsCount: BigInt!
    totalUniToken: BigDecimal!
    totalValue: BigDecimal!
    tradeVolumeEth: BigDecimal!
    tradeVolumeToken: BigDecimal!
    tradeVolumeUSD: BigDecimal!
    version: Int!
    weightedAvgPrice: BigDecimal!
    weightedAvgPriceUSD: BigDecimal!
}

type ExchangeDayData {
    date: Int!
    ethBalance: BigDecimal!
    ethVolume: BigDecimal!
    exchangeAddress: Bytes!
    id: ID!
    marginalEthRate: BigDecimal!
    tokenBalance: BigDecimal!
    tokenPriceUSD: BigDecimal!
    totalEvents: BigInt!
}

type ExchangeHistoricalData {
    combinedBalanceInEth: BigDecimal!
    combinedBalanceInUSD: BigDecimal!
    ethBalance: BigDecimal!
    ethLiquidity: BigDecimal!
    exchangeAddress: Bytes!
    feeInEth: BigDecimal!
    id: ID!
    price: BigDecimal!
    timestamp: Int!
    tokenBalance: BigDecimal!
    tokenLiquidity: BigDecimal!
    tokenPriceUSD: BigDecimal!
    totalTxsCount: BigInt!
    totalUniToken: BigDecimal!
    tradeVolumeEth: BigDecimal!
    tradeVolumeToken: BigDecimal!
    tradeVolumeUSD: BigDecimal!
    type: EventType!
}

type Query {
    addLiquidityEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): AddLiquidityEvent
    addLiquidityEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: AddLiquidityEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: AddLiquidityEvent_filter
    ): [AddLiquidityEvent!]!
    ethPurchaseEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): EthPurchaseEvent
    ethPurchaseEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: EthPurchaseEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: EthPurchaseEvent_filter
    ): [EthPurchaseEvent!]!
    exchange(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Exchange
    exchangeDayData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): ExchangeDayData
    exchangeDayDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: ExchangeDayData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: ExchangeDayData_filter
    ): [ExchangeDayData!]!
    exchangeHistoricalData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): ExchangeHistoricalData
    exchangeHistoricalDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: ExchangeHistoricalData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: ExchangeHistoricalData_filter
    ): [ExchangeHistoricalData!]!
    exchanges(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Exchange_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Exchange_filter
    ): [Exchange!]!
    removeLiquidityEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): RemoveLiquidityEvent
    removeLiquidityEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: RemoveLiquidityEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: RemoveLiquidityEvent_filter
    ): [RemoveLiquidityEvent!]!
    tokenPurchaseEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): TokenPurchaseEvent
    tokenPurchaseEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: TokenPurchaseEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: TokenPurchaseEvent_filter
    ): [TokenPurchaseEvent!]!
    transaction(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Transaction
    transactionEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): TransactionEvent
    transactionEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: TransactionEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: TransactionEvent_filter
    ): [TransactionEvent!]!
    transactions(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Transaction_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Transaction_filter
    ): [Transaction!]!
    uniswap(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Uniswap
    uniswapDayData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): UniswapDayData
    uniswapDayDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: UniswapDayData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: UniswapDayData_filter
    ): [UniswapDayData!]!
    uniswapHistoricalData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): UniswapHistoricalData
    uniswapHistoricalDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: UniswapHistoricalData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: UniswapHistoricalData_filter
    ): [UniswapHistoricalData!]!
    uniswaps(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Uniswap_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Uniswap_filter
    ): [Uniswap!]!
    user(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): User
    userExchangeData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): UserExchangeData
    userExchangeDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: UserExchangeData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: UserExchangeData_filter
    ): [UserExchangeData!]!
    users(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: User_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: User_filter
    ): [User!]!
}

type RemoveLiquidityEvent implements TransactionEvent {
    ethAmount: BigDecimal!
    id: ID!
    tokenAmount: BigDecimal!
    transaction: Transaction!
    uniTokensBurned: BigDecimal!
}

type Subscription {
    addLiquidityEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): AddLiquidityEvent
    addLiquidityEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: AddLiquidityEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: AddLiquidityEvent_filter
    ): [AddLiquidityEvent!]!
    ethPurchaseEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): EthPurchaseEvent
    ethPurchaseEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: EthPurchaseEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: EthPurchaseEvent_filter
    ): [EthPurchaseEvent!]!
    exchange(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Exchange
    exchangeDayData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): ExchangeDayData
    exchangeDayDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: ExchangeDayData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: ExchangeDayData_filter
    ): [ExchangeDayData!]!
    exchangeHistoricalData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): ExchangeHistoricalData
    exchangeHistoricalDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: ExchangeHistoricalData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: ExchangeHistoricalData_filter
    ): [ExchangeHistoricalData!]!
    exchanges(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Exchange_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Exchange_filter
    ): [Exchange!]!
    removeLiquidityEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): RemoveLiquidityEvent
    removeLiquidityEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: RemoveLiquidityEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: RemoveLiquidityEvent_filter
    ): [RemoveLiquidityEvent!]!
    tokenPurchaseEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): TokenPurchaseEvent
    tokenPurchaseEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: TokenPurchaseEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: TokenPurchaseEvent_filter
    ): [TokenPurchaseEvent!]!
    transaction(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Transaction
    transactionEvent(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): TransactionEvent
    transactionEvents(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: TransactionEvent_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: TransactionEvent_filter
    ): [TransactionEvent!]!
    transactions(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Transaction_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Transaction_filter
    ): [Transaction!]!
    uniswap(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Uniswap
    uniswapDayData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): UniswapDayData
    uniswapDayDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: UniswapDayData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: UniswapDayData_filter
    ): [UniswapDayData!]!
    uniswapHistoricalData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): UniswapHistoricalData
    uniswapHistoricalDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: UniswapHistoricalData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: UniswapHistoricalData_filter
    ): [UniswapHistoricalData!]!
    uniswaps(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Uniswap_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Uniswap_filter
    ): [Uniswap!]!
    user(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): User
    userExchangeData(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): UserExchangeData
    userExchangeDatas(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: UserExchangeData_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: UserExchangeData_filter
    ): [UserExchangeData!]!
    users(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: User_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: User_filter
    ): [User!]!
}

type TokenPurchaseEvent implements TransactionEvent {
    ethAmount: BigDecimal!
    ethFee: BigDecimal!
    id: ID!
    tokenAmount: BigDecimal!
    tokenFee: BigDecimal!
    transaction: Transaction!
}

type Transaction {
    addLiquidityEvents(first: Int = 100, orderBy: AddLiquidityEvent_orderBy, orderDirection: OrderDirection, skip: Int = 0, where: AddLiquidityEvent_filter): [AddLiquidityEvent!]
    block: Int!
    ethPurchaseEvents(first: Int = 100, orderBy: EthPurchaseEvent_orderBy, orderDirection: OrderDirection, skip: Int = 0, where: EthPurchaseEvent_filter): [EthPurchaseEvent!]
    exchangeAddress: Bytes!
    fee: BigDecimal!
    id: ID!
    removeLiquidityEvents(first: Int = 100, orderBy: RemoveLiquidityEvent_orderBy, orderDirection: OrderDirection, skip: Int = 0, where: RemoveLiquidityEvent_filter): [RemoveLiquidityEvent!]
    timestamp: Int!
    tokenPurchaseEvents(first: Int = 100, orderBy: TokenPurchaseEvent_orderBy, orderDirection: OrderDirection, skip: Int = 0, where: TokenPurchaseEvent_filter): [TokenPurchaseEvent!]
    user: Bytes!
}

type Uniswap {
    exchangeCount: Int!
    exchangeHistoryEntityCount: BigInt!
    exchanges(first: Int = 100, orderBy: Exchange_orderBy, orderDirection: OrderDirection, skip: Int = 0, where: Exchange_filter): [Exchange!]!
    id: ID!
    totalAddLiquidity: BigInt!
    totalLiquidityInEth: BigDecimal!
    totalLiquidityUSD: BigDecimal!
    totalRemoveLiquidity: BigInt!
    totalTokenBuys: BigInt!
    totalTokenSells: BigInt!
    totalVolumeInEth: BigDecimal!
    totalVolumeUSD: BigDecimal!
    txCount: BigInt!
    uniswapHistoryEntityCount: BigInt!
}

type UniswapDayData {
    dailyVolumeInETH: BigDecimal!
    dailyVolumeInUSD: BigDecimal!
    date: Int!
    id: ID!
    totalAddLiquidity: BigInt!
    totalLiquidityInEth: BigDecimal!
    totalLiquidityUSD: BigDecimal!
    totalRemoveLiquidity: BigInt!
    totalTokenBuys: BigInt!
    totalTokenSells: BigInt!
    totalVolumeInEth: BigDecimal!
    totalVolumeUSD: BigDecimal!
    txCount: BigInt!
}

type UniswapHistoricalData {
    id: ID!
    timestamp: Int!
    totalAddLiquidity: BigInt!
    totalLiquidityInEth: BigDecimal!
    totalLiquidityUSD: BigDecimal!
    totalRemoveLiquidity: BigInt!
    totalTokenBuys: BigInt!
    totalTokenSells: BigInt!
    totalVolumeInEth: BigDecimal!
    totalVolumeUSD: BigDecimal!
    txCount: BigInt!
}

type User {
    exchangeBalances(first: Int = 100, orderBy: UserExchangeData_orderBy, orderDirection: OrderDirection, skip: Int = 0, where: UserExchangeData_filter): [UserExchangeData!]!
    id: ID!
}

type UserExchangeData {
    ethBought: BigDecimal!
    ethDeposited: BigDecimal!
    ethFeesInUSD: BigDecimal!
    ethFeesPaid: BigDecimal!
    ethSold: BigDecimal!
    ethWithdrawn: BigDecimal!
    exchange: Exchange!
    id: ID!
    tokenFeesInUSD: BigDecimal!
    tokenFeesPaid: BigDecimal!
    tokensBought: BigDecimal!
    tokensDeposited: BigDecimal!
    tokensSold: BigDecimal!
    tokensWithdrawn: BigDecimal!
    uniTokenBalance: BigDecimal!
    user: User!
    userAddress: Bytes!
}

enum AddLiquidityEvent_orderBy {
    ethAmount
    id
    tokenAmount
    transaction
    uniTokensMinted
}

enum EthPurchaseEvent_orderBy {
    ethAmount
    ethFee
    id
    tokenAmount
    tokenFee
    transaction
}

enum EventType {
    AddLiquidity
    EthPurchase
    RemoveLiquidity
    TokenPurchase
}

enum ExchangeDayData_orderBy {
    date
    ethBalance
    ethVolume
    exchangeAddress
    id
    marginalEthRate
    tokenBalance
    tokenPriceUSD
    totalEvents
}

enum ExchangeHistoricalData_orderBy {
    combinedBalanceInEth
    combinedBalanceInUSD
    ethBalance
    ethLiquidity
    exchangeAddress
    feeInEth
    id
    price
    timestamp
    tokenBalance
    tokenLiquidity
    tokenPriceUSD
    totalTxsCount
    totalUniToken
    tradeVolumeEth
    tradeVolumeToken
    tradeVolumeUSD
    type
}

enum Exchange_orderBy {
    addLiquidityCount
    buyTokenCount
    combinedBalanceInEth
    combinedBalanceInUSD
    ethBalance
    ethLiquidity
    factory
    fee
    id
    lastPrice
    lastPriceUSD
    price
    priceUSD
    removeLiquidityCount
    sellTokenCount
    startTime
    tokenAddress
    tokenBalance
    tokenDecimals
    tokenHolders
    tokenLiquidity
    tokenName
    tokenSymbol
    totalTxsCount
    totalUniToken
    totalValue
    tradeVolumeEth
    tradeVolumeToken
    tradeVolumeUSD
    version
    weightedAvgPrice
    weightedAvgPriceUSD
}

enum OrderDirection {
    asc
    desc
}

enum RemoveLiquidityEvent_orderBy {
    ethAmount
    id
    tokenAmount
    transaction
    uniTokensBurned
}

enum TokenPurchaseEvent_orderBy {
    ethAmount
    ethFee
    id
    tokenAmount
    tokenFee
    transaction
}

enum TransactionEvent_orderBy {
    ethAmount
    id
    tokenAmount
    transaction
}

enum Transaction_orderBy {
    addLiquidityEvents
    block
    ethPurchaseEvents
    exchangeAddress
    fee
    id
    removeLiquidityEvents
    timestamp
    tokenPurchaseEvents
    user
}

enum UniswapDayData_orderBy {
    dailyVolumeInETH
    dailyVolumeInUSD
    date
    id
    totalAddLiquidity
    totalLiquidityInEth
    totalLiquidityUSD
    totalRemoveLiquidity
    totalTokenBuys
    totalTokenSells
    totalVolumeInEth
    totalVolumeUSD
    txCount
}

enum UniswapHistoricalData_orderBy {
    id
    timestamp
    totalAddLiquidity
    totalLiquidityInEth
    totalLiquidityUSD
    totalRemoveLiquidity
    totalTokenBuys
    totalTokenSells
    totalVolumeInEth
    totalVolumeUSD
    txCount
}

enum Uniswap_orderBy {
    exchangeCount
    exchangeHistoryEntityCount
    exchanges
    id
    totalAddLiquidity
    totalLiquidityInEth
    totalLiquidityUSD
    totalRemoveLiquidity
    totalTokenBuys
    totalTokenSells
    totalVolumeInEth
    totalVolumeUSD
    txCount
    uniswapHistoryEntityCount
}

enum UserExchangeData_orderBy {
    ethBought
    ethDeposited
    ethFeesInUSD
    ethFeesPaid
    ethSold
    ethWithdrawn
    exchange
    id
    tokenFeesInUSD
    tokenFeesPaid
    tokensBought
    tokensDeposited
    tokensSold
    tokensWithdrawn
    uniTokenBalance
    user
    userAddress
}

enum User_orderBy {
    exchangeBalances
    id
}

input AddLiquidityEvent_filter {
    ethAmount: BigDecimal
    ethAmount_gt: BigDecimal
    ethAmount_gte: BigDecimal
    ethAmount_in: [BigDecimal!]
    ethAmount_lt: BigDecimal
    ethAmount_lte: BigDecimal
    ethAmount_not: BigDecimal
    ethAmount_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    tokenAmount: BigDecimal
    tokenAmount_gt: BigDecimal
    tokenAmount_gte: BigDecimal
    tokenAmount_in: [BigDecimal!]
    tokenAmount_lt: BigDecimal
    tokenAmount_lte: BigDecimal
    tokenAmount_not: BigDecimal
    tokenAmount_not_in: [BigDecimal!]
    transaction: String
    transaction_contains: String
    transaction_ends_with: String
    transaction_gt: String
    transaction_gte: String
    transaction_in: [String!]
    transaction_lt: String
    transaction_lte: String
    transaction_not: String
    transaction_not_contains: String
    transaction_not_ends_with: String
    transaction_not_in: [String!]
    transaction_not_starts_with: String
    transaction_starts_with: String
    uniTokensMinted: BigDecimal
    uniTokensMinted_gt: BigDecimal
    uniTokensMinted_gte: BigDecimal
    uniTokensMinted_in: [BigDecimal!]
    uniTokensMinted_lt: BigDecimal
    uniTokensMinted_lte: BigDecimal
    uniTokensMinted_not: BigDecimal
    uniTokensMinted_not_in: [BigDecimal!]
}

input Block_height {
    hash: Bytes
    number: Int
}

input EthPurchaseEvent_filter {
    ethAmount: BigDecimal
    ethAmount_gt: BigDecimal
    ethAmount_gte: BigDecimal
    ethAmount_in: [BigDecimal!]
    ethAmount_lt: BigDecimal
    ethAmount_lte: BigDecimal
    ethAmount_not: BigDecimal
    ethAmount_not_in: [BigDecimal!]
    ethFee: BigDecimal
    ethFee_gt: BigDecimal
    ethFee_gte: BigDecimal
    ethFee_in: [BigDecimal!]
    ethFee_lt: BigDecimal
    ethFee_lte: BigDecimal
    ethFee_not: BigDecimal
    ethFee_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    tokenAmount: BigDecimal
    tokenAmount_gt: BigDecimal
    tokenAmount_gte: BigDecimal
    tokenAmount_in: [BigDecimal!]
    tokenAmount_lt: BigDecimal
    tokenAmount_lte: BigDecimal
    tokenAmount_not: BigDecimal
    tokenAmount_not_in: [BigDecimal!]
    tokenFee: BigDecimal
    tokenFee_gt: BigDecimal
    tokenFee_gte: BigDecimal
    tokenFee_in: [BigDecimal!]
    tokenFee_lt: BigDecimal
    tokenFee_lte: BigDecimal
    tokenFee_not: BigDecimal
    tokenFee_not_in: [BigDecimal!]
    transaction: String
    transaction_contains: String
    transaction_ends_with: String
    transaction_gt: String
    transaction_gte: String
    transaction_in: [String!]
    transaction_lt: String
    transaction_lte: String
    transaction_not: String
    transaction_not_contains: String
    transaction_not_ends_with: String
    transaction_not_in: [String!]
    transaction_not_starts_with: String
    transaction_starts_with: String
}

input ExchangeDayData_filter {
    date: Int
    date_gt: Int
    date_gte: Int
    date_in: [Int!]
    date_lt: Int
    date_lte: Int
    date_not: Int
    date_not_in: [Int!]
    ethBalance: BigDecimal
    ethBalance_gt: BigDecimal
    ethBalance_gte: BigDecimal
    ethBalance_in: [BigDecimal!]
    ethBalance_lt: BigDecimal
    ethBalance_lte: BigDecimal
    ethBalance_not: BigDecimal
    ethBalance_not_in: [BigDecimal!]
    ethVolume: BigDecimal
    ethVolume_gt: BigDecimal
    ethVolume_gte: BigDecimal
    ethVolume_in: [BigDecimal!]
    ethVolume_lt: BigDecimal
    ethVolume_lte: BigDecimal
    ethVolume_not: BigDecimal
    ethVolume_not_in: [BigDecimal!]
    exchangeAddress: Bytes
    exchangeAddress_contains: Bytes
    exchangeAddress_in: [Bytes!]
    exchangeAddress_not: Bytes
    exchangeAddress_not_contains: Bytes
    exchangeAddress_not_in: [Bytes!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    marginalEthRate: BigDecimal
    marginalEthRate_gt: BigDecimal
    marginalEthRate_gte: BigDecimal
    marginalEthRate_in: [BigDecimal!]
    marginalEthRate_lt: BigDecimal
    marginalEthRate_lte: BigDecimal
    marginalEthRate_not: BigDecimal
    marginalEthRate_not_in: [BigDecimal!]
    tokenBalance: BigDecimal
    tokenBalance_gt: BigDecimal
    tokenBalance_gte: BigDecimal
    tokenBalance_in: [BigDecimal!]
    tokenBalance_lt: BigDecimal
    tokenBalance_lte: BigDecimal
    tokenBalance_not: BigDecimal
    tokenBalance_not_in: [BigDecimal!]
    tokenPriceUSD: BigDecimal
    tokenPriceUSD_gt: BigDecimal
    tokenPriceUSD_gte: BigDecimal
    tokenPriceUSD_in: [BigDecimal!]
    tokenPriceUSD_lt: BigDecimal
    tokenPriceUSD_lte: BigDecimal
    tokenPriceUSD_not: BigDecimal
    tokenPriceUSD_not_in: [BigDecimal!]
    totalEvents: BigInt
    totalEvents_gt: BigInt
    totalEvents_gte: BigInt
    totalEvents_in: [BigInt!]
    totalEvents_lt: BigInt
    totalEvents_lte: BigInt
    totalEvents_not: BigInt
    totalEvents_not_in: [BigInt!]
}

input ExchangeHistoricalData_filter {
    combinedBalanceInEth: BigDecimal
    combinedBalanceInEth_gt: BigDecimal
    combinedBalanceInEth_gte: BigDecimal
    combinedBalanceInEth_in: [BigDecimal!]
    combinedBalanceInEth_lt: BigDecimal
    combinedBalanceInEth_lte: BigDecimal
    combinedBalanceInEth_not: BigDecimal
    combinedBalanceInEth_not_in: [BigDecimal!]
    combinedBalanceInUSD: BigDecimal
    combinedBalanceInUSD_gt: BigDecimal
    combinedBalanceInUSD_gte: BigDecimal
    combinedBalanceInUSD_in: [BigDecimal!]
    combinedBalanceInUSD_lt: BigDecimal
    combinedBalanceInUSD_lte: BigDecimal
    combinedBalanceInUSD_not: BigDecimal
    combinedBalanceInUSD_not_in: [BigDecimal!]
    ethBalance: BigDecimal
    ethBalance_gt: BigDecimal
    ethBalance_gte: BigDecimal
    ethBalance_in: [BigDecimal!]
    ethBalance_lt: BigDecimal
    ethBalance_lte: BigDecimal
    ethBalance_not: BigDecimal
    ethBalance_not_in: [BigDecimal!]
    ethLiquidity: BigDecimal
    ethLiquidity_gt: BigDecimal
    ethLiquidity_gte: BigDecimal
    ethLiquidity_in: [BigDecimal!]
    ethLiquidity_lt: BigDecimal
    ethLiquidity_lte: BigDecimal
    ethLiquidity_not: BigDecimal
    ethLiquidity_not_in: [BigDecimal!]
    exchangeAddress: Bytes
    exchangeAddress_contains: Bytes
    exchangeAddress_in: [Bytes!]
    exchangeAddress_not: Bytes
    exchangeAddress_not_contains: Bytes
    exchangeAddress_not_in: [Bytes!]
    feeInEth: BigDecimal
    feeInEth_gt: BigDecimal
    feeInEth_gte: BigDecimal
    feeInEth_in: [BigDecimal!]
    feeInEth_lt: BigDecimal
    feeInEth_lte: BigDecimal
    feeInEth_not: BigDecimal
    feeInEth_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    price: BigDecimal
    price_gt: BigDecimal
    price_gte: BigDecimal
    price_in: [BigDecimal!]
    price_lt: BigDecimal
    price_lte: BigDecimal
    price_not: BigDecimal
    price_not_in: [BigDecimal!]
    timestamp: Int
    timestamp_gt: Int
    timestamp_gte: Int
    timestamp_in: [Int!]
    timestamp_lt: Int
    timestamp_lte: Int
    timestamp_not: Int
    timestamp_not_in: [Int!]
    tokenBalance: BigDecimal
    tokenBalance_gt: BigDecimal
    tokenBalance_gte: BigDecimal
    tokenBalance_in: [BigDecimal!]
    tokenBalance_lt: BigDecimal
    tokenBalance_lte: BigDecimal
    tokenBalance_not: BigDecimal
    tokenBalance_not_in: [BigDecimal!]
    tokenLiquidity: BigDecimal
    tokenLiquidity_gt: BigDecimal
    tokenLiquidity_gte: BigDecimal
    tokenLiquidity_in: [BigDecimal!]
    tokenLiquidity_lt: BigDecimal
    tokenLiquidity_lte: BigDecimal
    tokenLiquidity_not: BigDecimal
    tokenLiquidity_not_in: [BigDecimal!]
    tokenPriceUSD: BigDecimal
    tokenPriceUSD_gt: BigDecimal
    tokenPriceUSD_gte: BigDecimal
    tokenPriceUSD_in: [BigDecimal!]
    tokenPriceUSD_lt: BigDecimal
    tokenPriceUSD_lte: BigDecimal
    tokenPriceUSD_not: BigDecimal
    tokenPriceUSD_not_in: [BigDecimal!]
    totalTxsCount: BigInt
    totalTxsCount_gt: BigInt
    totalTxsCount_gte: BigInt
    totalTxsCount_in: [BigInt!]
    totalTxsCount_lt: BigInt
    totalTxsCount_lte: BigInt
    totalTxsCount_not: BigInt
    totalTxsCount_not_in: [BigInt!]
    totalUniToken: BigDecimal
    totalUniToken_gt: BigDecimal
    totalUniToken_gte: BigDecimal
    totalUniToken_in: [BigDecimal!]
    totalUniToken_lt: BigDecimal
    totalUniToken_lte: BigDecimal
    totalUniToken_not: BigDecimal
    totalUniToken_not_in: [BigDecimal!]
    tradeVolumeEth: BigDecimal
    tradeVolumeEth_gt: BigDecimal
    tradeVolumeEth_gte: BigDecimal
    tradeVolumeEth_in: [BigDecimal!]
    tradeVolumeEth_lt: BigDecimal
    tradeVolumeEth_lte: BigDecimal
    tradeVolumeEth_not: BigDecimal
    tradeVolumeEth_not_in: [BigDecimal!]
    tradeVolumeToken: BigDecimal
    tradeVolumeToken_gt: BigDecimal
    tradeVolumeToken_gte: BigDecimal
    tradeVolumeToken_in: [BigDecimal!]
    tradeVolumeToken_lt: BigDecimal
    tradeVolumeToken_lte: BigDecimal
    tradeVolumeToken_not: BigDecimal
    tradeVolumeToken_not_in: [BigDecimal!]
    tradeVolumeUSD: BigDecimal
    tradeVolumeUSD_gt: BigDecimal
    tradeVolumeUSD_gte: BigDecimal
    tradeVolumeUSD_in: [BigDecimal!]
    tradeVolumeUSD_lt: BigDecimal
    tradeVolumeUSD_lte: BigDecimal
    tradeVolumeUSD_not: BigDecimal
    tradeVolumeUSD_not_in: [BigDecimal!]
    type: EventType
    type_not: EventType
}

input Exchange_filter {
    addLiquidityCount: BigInt
    addLiquidityCount_gt: BigInt
    addLiquidityCount_gte: BigInt
    addLiquidityCount_in: [BigInt!]
    addLiquidityCount_lt: BigInt
    addLiquidityCount_lte: BigInt
    addLiquidityCount_not: BigInt
    addLiquidityCount_not_in: [BigInt!]
    buyTokenCount: BigInt
    buyTokenCount_gt: BigInt
    buyTokenCount_gte: BigInt
    buyTokenCount_in: [BigInt!]
    buyTokenCount_lt: BigInt
    buyTokenCount_lte: BigInt
    buyTokenCount_not: BigInt
    buyTokenCount_not_in: [BigInt!]
    combinedBalanceInEth: BigDecimal
    combinedBalanceInEth_gt: BigDecimal
    combinedBalanceInEth_gte: BigDecimal
    combinedBalanceInEth_in: [BigDecimal!]
    combinedBalanceInEth_lt: BigDecimal
    combinedBalanceInEth_lte: BigDecimal
    combinedBalanceInEth_not: BigDecimal
    combinedBalanceInEth_not_in: [BigDecimal!]
    combinedBalanceInUSD: BigDecimal
    combinedBalanceInUSD_gt: BigDecimal
    combinedBalanceInUSD_gte: BigDecimal
    combinedBalanceInUSD_in: [BigDecimal!]
    combinedBalanceInUSD_lt: BigDecimal
    combinedBalanceInUSD_lte: BigDecimal
    combinedBalanceInUSD_not: BigDecimal
    combinedBalanceInUSD_not_in: [BigDecimal!]
    ethBalance: BigDecimal
    ethBalance_gt: BigDecimal
    ethBalance_gte: BigDecimal
    ethBalance_in: [BigDecimal!]
    ethBalance_lt: BigDecimal
    ethBalance_lte: BigDecimal
    ethBalance_not: BigDecimal
    ethBalance_not_in: [BigDecimal!]
    ethLiquidity: BigDecimal
    ethLiquidity_gt: BigDecimal
    ethLiquidity_gte: BigDecimal
    ethLiquidity_in: [BigDecimal!]
    ethLiquidity_lt: BigDecimal
    ethLiquidity_lte: BigDecimal
    ethLiquidity_not: BigDecimal
    ethLiquidity_not_in: [BigDecimal!]
    factory: String
    factory_contains: String
    factory_ends_with: String
    factory_gt: String
    factory_gte: String
    factory_in: [String!]
    factory_lt: String
    factory_lte: String
    factory_not: String
    factory_not_contains: String
    factory_not_ends_with: String
    factory_not_in: [String!]
    factory_not_starts_with: String
    factory_starts_with: String
    fee: BigDecimal
    fee_gt: BigDecimal
    fee_gte: BigDecimal
    fee_in: [BigDecimal!]
    fee_lt: BigDecimal
    fee_lte: BigDecimal
    fee_not: BigDecimal
    fee_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    lastPrice: BigDecimal
    lastPriceUSD: BigDecimal
    lastPriceUSD_gt: BigDecimal
    lastPriceUSD_gte: BigDecimal
    lastPriceUSD_in: [BigDecimal!]
    lastPriceUSD_lt: BigDecimal
    lastPriceUSD_lte: BigDecimal
    lastPriceUSD_not: BigDecimal
    lastPriceUSD_not_in: [BigDecimal!]
    lastPrice_gt: BigDecimal
    lastPrice_gte: BigDecimal
    lastPrice_in: [BigDecimal!]
    lastPrice_lt: BigDecimal
    lastPrice_lte: BigDecimal
    lastPrice_not: BigDecimal
    lastPrice_not_in: [BigDecimal!]
    price: BigDecimal
    priceUSD: BigDecimal
    priceUSD_gt: BigDecimal
    priceUSD_gte: BigDecimal
    priceUSD_in: [BigDecimal!]
    priceUSD_lt: BigDecimal
    priceUSD_lte: BigDecimal
    priceUSD_not: BigDecimal
    priceUSD_not_in: [BigDecimal!]
    price_gt: BigDecimal
    price_gte: BigDecimal
    price_in: [BigDecimal!]
    price_lt: BigDecimal
    price_lte: BigDecimal
    price_not: BigDecimal
    price_not_in: [BigDecimal!]
    removeLiquidityCount: BigInt
    removeLiquidityCount_gt: BigInt
    removeLiquidityCount_gte: BigInt
    removeLiquidityCount_in: [BigInt!]
    removeLiquidityCount_lt: BigInt
    removeLiquidityCount_lte: BigInt
    removeLiquidityCount_not: BigInt
    removeLiquidityCount_not_in: [BigInt!]
    sellTokenCount: BigInt
    sellTokenCount_gt: BigInt
    sellTokenCount_gte: BigInt
    sellTokenCount_in: [BigInt!]
    sellTokenCount_lt: BigInt
    sellTokenCount_lte: BigInt
    sellTokenCount_not: BigInt
    sellTokenCount_not_in: [BigInt!]
    startTime: Int
    startTime_gt: Int
    startTime_gte: Int
    startTime_in: [Int!]
    startTime_lt: Int
    startTime_lte: Int
    startTime_not: Int
    startTime_not_in: [Int!]
    tokenAddress: Bytes
    tokenAddress_contains: Bytes
    tokenAddress_in: [Bytes!]
    tokenAddress_not: Bytes
    tokenAddress_not_contains: Bytes
    tokenAddress_not_in: [Bytes!]
    tokenBalance: BigDecimal
    tokenBalance_gt: BigDecimal
    tokenBalance_gte: BigDecimal
    tokenBalance_in: [BigDecimal!]
    tokenBalance_lt: BigDecimal
    tokenBalance_lte: BigDecimal
    tokenBalance_not: BigDecimal
    tokenBalance_not_in: [BigDecimal!]
    tokenDecimals: Int
    tokenDecimals_gt: Int
    tokenDecimals_gte: Int
    tokenDecimals_in: [Int!]
    tokenDecimals_lt: Int
    tokenDecimals_lte: Int
    tokenDecimals_not: Int
    tokenDecimals_not_in: [Int!]
    tokenHolders: [String!]
    tokenHolders_contains: [String!]
    tokenHolders_not: [String!]
    tokenHolders_not_contains: [String!]
    tokenLiquidity: BigDecimal
    tokenLiquidity_gt: BigDecimal
    tokenLiquidity_gte: BigDecimal
    tokenLiquidity_in: [BigDecimal!]
    tokenLiquidity_lt: BigDecimal
    tokenLiquidity_lte: BigDecimal
    tokenLiquidity_not: BigDecimal
    tokenLiquidity_not_in: [BigDecimal!]
    tokenName: String
    tokenName_contains: String
    tokenName_ends_with: String
    tokenName_gt: String
    tokenName_gte: String
    tokenName_in: [String!]
    tokenName_lt: String
    tokenName_lte: String
    tokenName_not: String
    tokenName_not_contains: String
    tokenName_not_ends_with: String
    tokenName_not_in: [String!]
    tokenName_not_starts_with: String
    tokenName_starts_with: String
    tokenSymbol: String
    tokenSymbol_contains: String
    tokenSymbol_ends_with: String
    tokenSymbol_gt: String
    tokenSymbol_gte: String
    tokenSymbol_in: [String!]
    tokenSymbol_lt: String
    tokenSymbol_lte: String
    tokenSymbol_not: String
    tokenSymbol_not_contains: String
    tokenSymbol_not_ends_with: String
    tokenSymbol_not_in: [String!]
    tokenSymbol_not_starts_with: String
    tokenSymbol_starts_with: String
    totalTxsCount: BigInt
    totalTxsCount_gt: BigInt
    totalTxsCount_gte: BigInt
    totalTxsCount_in: [BigInt!]
    totalTxsCount_lt: BigInt
    totalTxsCount_lte: BigInt
    totalTxsCount_not: BigInt
    totalTxsCount_not_in: [BigInt!]
    totalUniToken: BigDecimal
    totalUniToken_gt: BigDecimal
    totalUniToken_gte: BigDecimal
    totalUniToken_in: [BigDecimal!]
    totalUniToken_lt: BigDecimal
    totalUniToken_lte: BigDecimal
    totalUniToken_not: BigDecimal
    totalUniToken_not_in: [BigDecimal!]
    totalValue: BigDecimal
    totalValue_gt: BigDecimal
    totalValue_gte: BigDecimal
    totalValue_in: [BigDecimal!]
    totalValue_lt: BigDecimal
    totalValue_lte: BigDecimal
    totalValue_not: BigDecimal
    totalValue_not_in: [BigDecimal!]
    tradeVolumeEth: BigDecimal
    tradeVolumeEth_gt: BigDecimal
    tradeVolumeEth_gte: BigDecimal
    tradeVolumeEth_in: [BigDecimal!]
    tradeVolumeEth_lt: BigDecimal
    tradeVolumeEth_lte: BigDecimal
    tradeVolumeEth_not: BigDecimal
    tradeVolumeEth_not_in: [BigDecimal!]
    tradeVolumeToken: BigDecimal
    tradeVolumeToken_gt: BigDecimal
    tradeVolumeToken_gte: BigDecimal
    tradeVolumeToken_in: [BigDecimal!]
    tradeVolumeToken_lt: BigDecimal
    tradeVolumeToken_lte: BigDecimal
    tradeVolumeToken_not: BigDecimal
    tradeVolumeToken_not_in: [BigDecimal!]
    tradeVolumeUSD: BigDecimal
    tradeVolumeUSD_gt: BigDecimal
    tradeVolumeUSD_gte: BigDecimal
    tradeVolumeUSD_in: [BigDecimal!]
    tradeVolumeUSD_lt: BigDecimal
    tradeVolumeUSD_lte: BigDecimal
    tradeVolumeUSD_not: BigDecimal
    tradeVolumeUSD_not_in: [BigDecimal!]
    version: Int
    version_gt: Int
    version_gte: Int
    version_in: [Int!]
    version_lt: Int
    version_lte: Int
    version_not: Int
    version_not_in: [Int!]
    weightedAvgPrice: BigDecimal
    weightedAvgPriceUSD: BigDecimal
    weightedAvgPriceUSD_gt: BigDecimal
    weightedAvgPriceUSD_gte: BigDecimal
    weightedAvgPriceUSD_in: [BigDecimal!]
    weightedAvgPriceUSD_lt: BigDecimal
    weightedAvgPriceUSD_lte: BigDecimal
    weightedAvgPriceUSD_not: BigDecimal
    weightedAvgPriceUSD_not_in: [BigDecimal!]
    weightedAvgPrice_gt: BigDecimal
    weightedAvgPrice_gte: BigDecimal
    weightedAvgPrice_in: [BigDecimal!]
    weightedAvgPrice_lt: BigDecimal
    weightedAvgPrice_lte: BigDecimal
    weightedAvgPrice_not: BigDecimal
    weightedAvgPrice_not_in: [BigDecimal!]
}

input RemoveLiquidityEvent_filter {
    ethAmount: BigDecimal
    ethAmount_gt: BigDecimal
    ethAmount_gte: BigDecimal
    ethAmount_in: [BigDecimal!]
    ethAmount_lt: BigDecimal
    ethAmount_lte: BigDecimal
    ethAmount_not: BigDecimal
    ethAmount_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    tokenAmount: BigDecimal
    tokenAmount_gt: BigDecimal
    tokenAmount_gte: BigDecimal
    tokenAmount_in: [BigDecimal!]
    tokenAmount_lt: BigDecimal
    tokenAmount_lte: BigDecimal
    tokenAmount_not: BigDecimal
    tokenAmount_not_in: [BigDecimal!]
    transaction: String
    transaction_contains: String
    transaction_ends_with: String
    transaction_gt: String
    transaction_gte: String
    transaction_in: [String!]
    transaction_lt: String
    transaction_lte: String
    transaction_not: String
    transaction_not_contains: String
    transaction_not_ends_with: String
    transaction_not_in: [String!]
    transaction_not_starts_with: String
    transaction_starts_with: String
    uniTokensBurned: BigDecimal
    uniTokensBurned_gt: BigDecimal
    uniTokensBurned_gte: BigDecimal
    uniTokensBurned_in: [BigDecimal!]
    uniTokensBurned_lt: BigDecimal
    uniTokensBurned_lte: BigDecimal
    uniTokensBurned_not: BigDecimal
    uniTokensBurned_not_in: [BigDecimal!]
}

input TokenPurchaseEvent_filter {
    ethAmount: BigDecimal
    ethAmount_gt: BigDecimal
    ethAmount_gte: BigDecimal
    ethAmount_in: [BigDecimal!]
    ethAmount_lt: BigDecimal
    ethAmount_lte: BigDecimal
    ethAmount_not: BigDecimal
    ethAmount_not_in: [BigDecimal!]
    ethFee: BigDecimal
    ethFee_gt: BigDecimal
    ethFee_gte: BigDecimal
    ethFee_in: [BigDecimal!]
    ethFee_lt: BigDecimal
    ethFee_lte: BigDecimal
    ethFee_not: BigDecimal
    ethFee_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    tokenAmount: BigDecimal
    tokenAmount_gt: BigDecimal
    tokenAmount_gte: BigDecimal
    tokenAmount_in: [BigDecimal!]
    tokenAmount_lt: BigDecimal
    tokenAmount_lte: BigDecimal
    tokenAmount_not: BigDecimal
    tokenAmount_not_in: [BigDecimal!]
    tokenFee: BigDecimal
    tokenFee_gt: BigDecimal
    tokenFee_gte: BigDecimal
    tokenFee_in: [BigDecimal!]
    tokenFee_lt: BigDecimal
    tokenFee_lte: BigDecimal
    tokenFee_not: BigDecimal
    tokenFee_not_in: [BigDecimal!]
    transaction: String
    transaction_contains: String
    transaction_ends_with: String
    transaction_gt: String
    transaction_gte: String
    transaction_in: [String!]
    transaction_lt: String
    transaction_lte: String
    transaction_not: String
    transaction_not_contains: String
    transaction_not_ends_with: String
    transaction_not_in: [String!]
    transaction_not_starts_with: String
    transaction_starts_with: String
}

input TransactionEvent_filter {
    ethAmount: BigDecimal
    ethAmount_gt: BigDecimal
    ethAmount_gte: BigDecimal
    ethAmount_in: [BigDecimal!]
    ethAmount_lt: BigDecimal
    ethAmount_lte: BigDecimal
    ethAmount_not: BigDecimal
    ethAmount_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    tokenAmount: BigDecimal
    tokenAmount_gt: BigDecimal
    tokenAmount_gte: BigDecimal
    tokenAmount_in: [BigDecimal!]
    tokenAmount_lt: BigDecimal
    tokenAmount_lte: BigDecimal
    tokenAmount_not: BigDecimal
    tokenAmount_not_in: [BigDecimal!]
    transaction: String
    transaction_contains: String
    transaction_ends_with: String
    transaction_gt: String
    transaction_gte: String
    transaction_in: [String!]
    transaction_lt: String
    transaction_lte: String
    transaction_not: String
    transaction_not_contains: String
    transaction_not_ends_with: String
    transaction_not_in: [String!]
    transaction_not_starts_with: String
    transaction_starts_with: String
}

input Transaction_filter {
    block: Int
    block_gt: Int
    block_gte: Int
    block_in: [Int!]
    block_lt: Int
    block_lte: Int
    block_not: Int
    block_not_in: [Int!]
    exchangeAddress: Bytes
    exchangeAddress_contains: Bytes
    exchangeAddress_in: [Bytes!]
    exchangeAddress_not: Bytes
    exchangeAddress_not_contains: Bytes
    exchangeAddress_not_in: [Bytes!]
    fee: BigDecimal
    fee_gt: BigDecimal
    fee_gte: BigDecimal
    fee_in: [BigDecimal!]
    fee_lt: BigDecimal
    fee_lte: BigDecimal
    fee_not: BigDecimal
    fee_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    timestamp: Int
    timestamp_gt: Int
    timestamp_gte: Int
    timestamp_in: [Int!]
    timestamp_lt: Int
    timestamp_lte: Int
    timestamp_not: Int
    timestamp_not_in: [Int!]
    user: Bytes
    user_contains: Bytes
    user_in: [Bytes!]
    user_not: Bytes
    user_not_contains: Bytes
    user_not_in: [Bytes!]
}

input UniswapDayData_filter {
    dailyVolumeInETH: BigDecimal
    dailyVolumeInETH_gt: BigDecimal
    dailyVolumeInETH_gte: BigDecimal
    dailyVolumeInETH_in: [BigDecimal!]
    dailyVolumeInETH_lt: BigDecimal
    dailyVolumeInETH_lte: BigDecimal
    dailyVolumeInETH_not: BigDecimal
    dailyVolumeInETH_not_in: [BigDecimal!]
    dailyVolumeInUSD: BigDecimal
    dailyVolumeInUSD_gt: BigDecimal
    dailyVolumeInUSD_gte: BigDecimal
    dailyVolumeInUSD_in: [BigDecimal!]
    dailyVolumeInUSD_lt: BigDecimal
    dailyVolumeInUSD_lte: BigDecimal
    dailyVolumeInUSD_not: BigDecimal
    dailyVolumeInUSD_not_in: [BigDecimal!]
    date: Int
    date_gt: Int
    date_gte: Int
    date_in: [Int!]
    date_lt: Int
    date_lte: Int
    date_not: Int
    date_not_in: [Int!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    totalAddLiquidity: BigInt
    totalAddLiquidity_gt: BigInt
    totalAddLiquidity_gte: BigInt
    totalAddLiquidity_in: [BigInt!]
    totalAddLiquidity_lt: BigInt
    totalAddLiquidity_lte: BigInt
    totalAddLiquidity_not: BigInt
    totalAddLiquidity_not_in: [BigInt!]
    totalLiquidityInEth: BigDecimal
    totalLiquidityInEth_gt: BigDecimal
    totalLiquidityInEth_gte: BigDecimal
    totalLiquidityInEth_in: [BigDecimal!]
    totalLiquidityInEth_lt: BigDecimal
    totalLiquidityInEth_lte: BigDecimal
    totalLiquidityInEth_not: BigDecimal
    totalLiquidityInEth_not_in: [BigDecimal!]
    totalLiquidityUSD: BigDecimal
    totalLiquidityUSD_gt: BigDecimal
    totalLiquidityUSD_gte: BigDecimal
    totalLiquidityUSD_in: [BigDecimal!]
    totalLiquidityUSD_lt: BigDecimal
    totalLiquidityUSD_lte: BigDecimal
    totalLiquidityUSD_not: BigDecimal
    totalLiquidityUSD_not_in: [BigDecimal!]
    totalRemoveLiquidity: BigInt
    totalRemoveLiquidity_gt: BigInt
    totalRemoveLiquidity_gte: BigInt
    totalRemoveLiquidity_in: [BigInt!]
    totalRemoveLiquidity_lt: BigInt
    totalRemoveLiquidity_lte: BigInt
    totalRemoveLiquidity_not: BigInt
    totalRemoveLiquidity_not_in: [BigInt!]
    totalTokenBuys: BigInt
    totalTokenBuys_gt: BigInt
    totalTokenBuys_gte: BigInt
    totalTokenBuys_in: [BigInt!]
    totalTokenBuys_lt: BigInt
    totalTokenBuys_lte: BigInt
    totalTokenBuys_not: BigInt
    totalTokenBuys_not_in: [BigInt!]
    totalTokenSells: BigInt
    totalTokenSells_gt: BigInt
    totalTokenSells_gte: BigInt
    totalTokenSells_in: [BigInt!]
    totalTokenSells_lt: BigInt
    totalTokenSells_lte: BigInt
    totalTokenSells_not: BigInt
    totalTokenSells_not_in: [BigInt!]
    totalVolumeInEth: BigDecimal
    totalVolumeInEth_gt: BigDecimal
    totalVolumeInEth_gte: BigDecimal
    totalVolumeInEth_in: [BigDecimal!]
    totalVolumeInEth_lt: BigDecimal
    totalVolumeInEth_lte: BigDecimal
    totalVolumeInEth_not: BigDecimal
    totalVolumeInEth_not_in: [BigDecimal!]
    totalVolumeUSD: BigDecimal
    totalVolumeUSD_gt: BigDecimal
    totalVolumeUSD_gte: BigDecimal
    totalVolumeUSD_in: [BigDecimal!]
    totalVolumeUSD_lt: BigDecimal
    totalVolumeUSD_lte: BigDecimal
    totalVolumeUSD_not: BigDecimal
    totalVolumeUSD_not_in: [BigDecimal!]
    txCount: BigInt
    txCount_gt: BigInt
    txCount_gte: BigInt
    txCount_in: [BigInt!]
    txCount_lt: BigInt
    txCount_lte: BigInt
    txCount_not: BigInt
    txCount_not_in: [BigInt!]
}

input UniswapHistoricalData_filter {
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    timestamp: Int
    timestamp_gt: Int
    timestamp_gte: Int
    timestamp_in: [Int!]
    timestamp_lt: Int
    timestamp_lte: Int
    timestamp_not: Int
    timestamp_not_in: [Int!]
    totalAddLiquidity: BigInt
    totalAddLiquidity_gt: BigInt
    totalAddLiquidity_gte: BigInt
    totalAddLiquidity_in: [BigInt!]
    totalAddLiquidity_lt: BigInt
    totalAddLiquidity_lte: BigInt
    totalAddLiquidity_not: BigInt
    totalAddLiquidity_not_in: [BigInt!]
    totalLiquidityInEth: BigDecimal
    totalLiquidityInEth_gt: BigDecimal
    totalLiquidityInEth_gte: BigDecimal
    totalLiquidityInEth_in: [BigDecimal!]
    totalLiquidityInEth_lt: BigDecimal
    totalLiquidityInEth_lte: BigDecimal
    totalLiquidityInEth_not: BigDecimal
    totalLiquidityInEth_not_in: [BigDecimal!]
    totalLiquidityUSD: BigDecimal
    totalLiquidityUSD_gt: BigDecimal
    totalLiquidityUSD_gte: BigDecimal
    totalLiquidityUSD_in: [BigDecimal!]
    totalLiquidityUSD_lt: BigDecimal
    totalLiquidityUSD_lte: BigDecimal
    totalLiquidityUSD_not: BigDecimal
    totalLiquidityUSD_not_in: [BigDecimal!]
    totalRemoveLiquidity: BigInt
    totalRemoveLiquidity_gt: BigInt
    totalRemoveLiquidity_gte: BigInt
    totalRemoveLiquidity_in: [BigInt!]
    totalRemoveLiquidity_lt: BigInt
    totalRemoveLiquidity_lte: BigInt
    totalRemoveLiquidity_not: BigInt
    totalRemoveLiquidity_not_in: [BigInt!]
    totalTokenBuys: BigInt
    totalTokenBuys_gt: BigInt
    totalTokenBuys_gte: BigInt
    totalTokenBuys_in: [BigInt!]
    totalTokenBuys_lt: BigInt
    totalTokenBuys_lte: BigInt
    totalTokenBuys_not: BigInt
    totalTokenBuys_not_in: [BigInt!]
    totalTokenSells: BigInt
    totalTokenSells_gt: BigInt
    totalTokenSells_gte: BigInt
    totalTokenSells_in: [BigInt!]
    totalTokenSells_lt: BigInt
    totalTokenSells_lte: BigInt
    totalTokenSells_not: BigInt
    totalTokenSells_not_in: [BigInt!]
    totalVolumeInEth: BigDecimal
    totalVolumeInEth_gt: BigDecimal
    totalVolumeInEth_gte: BigDecimal
    totalVolumeInEth_in: [BigDecimal!]
    totalVolumeInEth_lt: BigDecimal
    totalVolumeInEth_lte: BigDecimal
    totalVolumeInEth_not: BigDecimal
    totalVolumeInEth_not_in: [BigDecimal!]
    totalVolumeUSD: BigDecimal
    totalVolumeUSD_gt: BigDecimal
    totalVolumeUSD_gte: BigDecimal
    totalVolumeUSD_in: [BigDecimal!]
    totalVolumeUSD_lt: BigDecimal
    totalVolumeUSD_lte: BigDecimal
    totalVolumeUSD_not: BigDecimal
    totalVolumeUSD_not_in: [BigDecimal!]
    txCount: BigInt
    txCount_gt: BigInt
    txCount_gte: BigInt
    txCount_in: [BigInt!]
    txCount_lt: BigInt
    txCount_lte: BigInt
    txCount_not: BigInt
    txCount_not_in: [BigInt!]
}

input Uniswap_filter {
    exchangeCount: Int
    exchangeCount_gt: Int
    exchangeCount_gte: Int
    exchangeCount_in: [Int!]
    exchangeCount_lt: Int
    exchangeCount_lte: Int
    exchangeCount_not: Int
    exchangeCount_not_in: [Int!]
    exchangeHistoryEntityCount: BigInt
    exchangeHistoryEntityCount_gt: BigInt
    exchangeHistoryEntityCount_gte: BigInt
    exchangeHistoryEntityCount_in: [BigInt!]
    exchangeHistoryEntityCount_lt: BigInt
    exchangeHistoryEntityCount_lte: BigInt
    exchangeHistoryEntityCount_not: BigInt
    exchangeHistoryEntityCount_not_in: [BigInt!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    totalAddLiquidity: BigInt
    totalAddLiquidity_gt: BigInt
    totalAddLiquidity_gte: BigInt
    totalAddLiquidity_in: [BigInt!]
    totalAddLiquidity_lt: BigInt
    totalAddLiquidity_lte: BigInt
    totalAddLiquidity_not: BigInt
    totalAddLiquidity_not_in: [BigInt!]
    totalLiquidityInEth: BigDecimal
    totalLiquidityInEth_gt: BigDecimal
    totalLiquidityInEth_gte: BigDecimal
    totalLiquidityInEth_in: [BigDecimal!]
    totalLiquidityInEth_lt: BigDecimal
    totalLiquidityInEth_lte: BigDecimal
    totalLiquidityInEth_not: BigDecimal
    totalLiquidityInEth_not_in: [BigDecimal!]
    totalLiquidityUSD: BigDecimal
    totalLiquidityUSD_gt: BigDecimal
    totalLiquidityUSD_gte: BigDecimal
    totalLiquidityUSD_in: [BigDecimal!]
    totalLiquidityUSD_lt: BigDecimal
    totalLiquidityUSD_lte: BigDecimal
    totalLiquidityUSD_not: BigDecimal
    totalLiquidityUSD_not_in: [BigDecimal!]
    totalRemoveLiquidity: BigInt
    totalRemoveLiquidity_gt: BigInt
    totalRemoveLiquidity_gte: BigInt
    totalRemoveLiquidity_in: [BigInt!]
    totalRemoveLiquidity_lt: BigInt
    totalRemoveLiquidity_lte: BigInt
    totalRemoveLiquidity_not: BigInt
    totalRemoveLiquidity_not_in: [BigInt!]
    totalTokenBuys: BigInt
    totalTokenBuys_gt: BigInt
    totalTokenBuys_gte: BigInt
    totalTokenBuys_in: [BigInt!]
    totalTokenBuys_lt: BigInt
    totalTokenBuys_lte: BigInt
    totalTokenBuys_not: BigInt
    totalTokenBuys_not_in: [BigInt!]
    totalTokenSells: BigInt
    totalTokenSells_gt: BigInt
    totalTokenSells_gte: BigInt
    totalTokenSells_in: [BigInt!]
    totalTokenSells_lt: BigInt
    totalTokenSells_lte: BigInt
    totalTokenSells_not: BigInt
    totalTokenSells_not_in: [BigInt!]
    totalVolumeInEth: BigDecimal
    totalVolumeInEth_gt: BigDecimal
    totalVolumeInEth_gte: BigDecimal
    totalVolumeInEth_in: [BigDecimal!]
    totalVolumeInEth_lt: BigDecimal
    totalVolumeInEth_lte: BigDecimal
    totalVolumeInEth_not: BigDecimal
    totalVolumeInEth_not_in: [BigDecimal!]
    totalVolumeUSD: BigDecimal
    totalVolumeUSD_gt: BigDecimal
    totalVolumeUSD_gte: BigDecimal
    totalVolumeUSD_in: [BigDecimal!]
    totalVolumeUSD_lt: BigDecimal
    totalVolumeUSD_lte: BigDecimal
    totalVolumeUSD_not: BigDecimal
    totalVolumeUSD_not_in: [BigDecimal!]
    txCount: BigInt
    txCount_gt: BigInt
    txCount_gte: BigInt
    txCount_in: [BigInt!]
    txCount_lt: BigInt
    txCount_lte: BigInt
    txCount_not: BigInt
    txCount_not_in: [BigInt!]
    uniswapHistoryEntityCount: BigInt
    uniswapHistoryEntityCount_gt: BigInt
    uniswapHistoryEntityCount_gte: BigInt
    uniswapHistoryEntityCount_in: [BigInt!]
    uniswapHistoryEntityCount_lt: BigInt
    uniswapHistoryEntityCount_lte: BigInt
    uniswapHistoryEntityCount_not: BigInt
    uniswapHistoryEntityCount_not_in: [BigInt!]
}

input UserExchangeData_filter {
    ethBought: BigDecimal
    ethBought_gt: BigDecimal
    ethBought_gte: BigDecimal
    ethBought_in: [BigDecimal!]
    ethBought_lt: BigDecimal
    ethBought_lte: BigDecimal
    ethBought_not: BigDecimal
    ethBought_not_in: [BigDecimal!]
    ethDeposited: BigDecimal
    ethDeposited_gt: BigDecimal
    ethDeposited_gte: BigDecimal
    ethDeposited_in: [BigDecimal!]
    ethDeposited_lt: BigDecimal
    ethDeposited_lte: BigDecimal
    ethDeposited_not: BigDecimal
    ethDeposited_not_in: [BigDecimal!]
    ethFeesInUSD: BigDecimal
    ethFeesInUSD_gt: BigDecimal
    ethFeesInUSD_gte: BigDecimal
    ethFeesInUSD_in: [BigDecimal!]
    ethFeesInUSD_lt: BigDecimal
    ethFeesInUSD_lte: BigDecimal
    ethFeesInUSD_not: BigDecimal
    ethFeesInUSD_not_in: [BigDecimal!]
    ethFeesPaid: BigDecimal
    ethFeesPaid_gt: BigDecimal
    ethFeesPaid_gte: BigDecimal
    ethFeesPaid_in: [BigDecimal!]
    ethFeesPaid_lt: BigDecimal
    ethFeesPaid_lte: BigDecimal
    ethFeesPaid_not: BigDecimal
    ethFeesPaid_not_in: [BigDecimal!]
    ethSold: BigDecimal
    ethSold_gt: BigDecimal
    ethSold_gte: BigDecimal
    ethSold_in: [BigDecimal!]
    ethSold_lt: BigDecimal
    ethSold_lte: BigDecimal
    ethSold_not: BigDecimal
    ethSold_not_in: [BigDecimal!]
    ethWithdrawn: BigDecimal
    ethWithdrawn_gt: BigDecimal
    ethWithdrawn_gte: BigDecimal
    ethWithdrawn_in: [BigDecimal!]
    ethWithdrawn_lt: BigDecimal
    ethWithdrawn_lte: BigDecimal
    ethWithdrawn_not: BigDecimal
    ethWithdrawn_not_in: [BigDecimal!]
    exchange: String
    exchange_contains: String
    exchange_ends_with: String
    exchange_gt: String
    exchange_gte: String
    exchange_in: [String!]
    exchange_lt: String
    exchange_lte: String
    exchange_not: String
    exchange_not_contains: String
    exchange_not_ends_with: String
    exchange_not_in: [String!]
    exchange_not_starts_with: String
    exchange_starts_with: String
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    tokenFeesInUSD: BigDecimal
    tokenFeesInUSD_gt: BigDecimal
    tokenFeesInUSD_gte: BigDecimal
    tokenFeesInUSD_in: [BigDecimal!]
    tokenFeesInUSD_lt: BigDecimal
    tokenFeesInUSD_lte: BigDecimal
    tokenFeesInUSD_not: BigDecimal
    tokenFeesInUSD_not_in: [BigDecimal!]
    tokenFeesPaid: BigDecimal
    tokenFeesPaid_gt: BigDecimal
    tokenFeesPaid_gte: BigDecimal
    tokenFeesPaid_in: [BigDecimal!]
    tokenFeesPaid_lt: BigDecimal
    tokenFeesPaid_lte: BigDecimal
    tokenFeesPaid_not: BigDecimal
    tokenFeesPaid_not_in: [BigDecimal!]
    tokensBought: BigDecimal
    tokensBought_gt: BigDecimal
    tokensBought_gte: BigDecimal
    tokensBought_in: [BigDecimal!]
    tokensBought_lt: BigDecimal
    tokensBought_lte: BigDecimal
    tokensBought_not: BigDecimal
    tokensBought_not_in: [BigDecimal!]
    tokensDeposited: BigDecimal
    tokensDeposited_gt: BigDecimal
    tokensDeposited_gte: BigDecimal
    tokensDeposited_in: [BigDecimal!]
    tokensDeposited_lt: BigDecimal
    tokensDeposited_lte: BigDecimal
    tokensDeposited_not: BigDecimal
    tokensDeposited_not_in: [BigDecimal!]
    tokensSold: BigDecimal
    tokensSold_gt: BigDecimal
    tokensSold_gte: BigDecimal
    tokensSold_in: [BigDecimal!]
    tokensSold_lt: BigDecimal
    tokensSold_lte: BigDecimal
    tokensSold_not: BigDecimal
    tokensSold_not_in: [BigDecimal!]
    tokensWithdrawn: BigDecimal
    tokensWithdrawn_gt: BigDecimal
    tokensWithdrawn_gte: BigDecimal
    tokensWithdrawn_in: [BigDecimal!]
    tokensWithdrawn_lt: BigDecimal
    tokensWithdrawn_lte: BigDecimal
    tokensWithdrawn_not: BigDecimal
    tokensWithdrawn_not_in: [BigDecimal!]
    uniTokenBalance: BigDecimal
    uniTokenBalance_gt: BigDecimal
    uniTokenBalance_gte: BigDecimal
    uniTokenBalance_in: [BigDecimal!]
    uniTokenBalance_lt: BigDecimal
    uniTokenBalance_lte: BigDecimal
    uniTokenBalance_not: BigDecimal
    uniTokenBalance_not_in: [BigDecimal!]
    user: String
    userAddress: Bytes
    userAddress_contains: Bytes
    userAddress_in: [Bytes!]
    userAddress_not: Bytes
    userAddress_not_contains: Bytes
    userAddress_not_in: [Bytes!]
    user_contains: String
    user_ends_with: String
    user_gt: String
    user_gte: String
    user_in: [String!]
    user_lt: String
    user_lte: String
    user_not: String
    user_not_contains: String
    user_not_ends_with: String
    user_not_in: [String!]
    user_not_starts_with: String
    user_starts_with: String
}

input User_filter {
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
}


scalar BigDecimal

scalar BigInt

scalar Bytes